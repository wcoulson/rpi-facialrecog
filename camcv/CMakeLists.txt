
cmake_minimum_required(VERSION 2.8)
project( secEntry )
SET(COMPILE_DEFINITIONS -Werror)
#OPENCV
find_package( OpenCV REQUIRED)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++0x ")
link_directories( /home/pi/libfacerec/bytefish-libfacerec-e1b143d )

include_directories(/opt/vc/userland-master/host_applications/linux/libs/bcm_host/include)
include_directories(/opt/vc/userland-master/interface/vcos)
include_directories(/opt/vc/include)
include_directories(/opt/vc/userland-master)
include_directories(/opt/vc/userland-master/interface/vcos/pthreads)
include_directories(/opt/vc/userland-master/interface/vmcs_host/linux)
include_directories(.)
include_directories(./gl_scenes)
include_directories(/opt/vc/userland-master/interface/khronos/include)
include_directories(/opt/vc/userland-master/interface/khronos/common)
add_executable(secEntry RaspiCamControl.c RaspiCLI.c RaspiPreview.c waynePi_IO.hpp waynePi_IO.cpp secEntry.cpp RaspiTex.c RaspiTexUtil.c teapot.c models.c square.c mirror.c yuv.c sobel.c tga.c)
target_link_libraries(secEntry /opt/vc/lib/libmmal_core.so /opt/vc/lib/libmmal_util.so /opt/vc/lib/libmmal_vc_client.so /opt/vc/lib/libvcos.so /opt/vc/lib/libbcm_host.so /opt/vc/lib/libGLESv2.so /opt/vc/lib/libEGL.so /home/pi/libfacerec/bytefish-libfacerec-e1b143d/libopencv_facerec.a ${OpenCV_LIBS})
